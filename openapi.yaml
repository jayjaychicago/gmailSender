openapi: 3.0.3
info:
  title: Gmail API - Send Email
  description: |
    Gmail API specification for sending emails. This API allows applications to send emails 
    on behalf of users using OAuth 2.0 authentication.
  version: "v1"
  contact:
    name: Google Gmail API
    url: https://developers.google.com/gmail/api
  license:
    name: Google APIs Terms of Service
    url: https://developers.google.com/terms

servers:
  - url: https://gmail.googleapis.com
    description: Gmail API production server

security:
  - oauth2: [https://www.googleapis.com/auth/gmail.send]

paths:
  /gmail/v1/users/{userId}/messages/send:
    post:
      summary: Send an email message
      description: |
        Sends the specified message to the recipients in the To, Cc, and Bcc headers.
        The message must be a valid RFC 2822 message.
      operationId: sendMessage
      tags:
        - Messages
      security:
        - oauth2: [https://www.googleapis.com/auth/gmail.send]
      parameters:
        - name: userId
          in: path
          required: true
          description: |
            The user's email address. The special value "me" can be used to indicate 
            the authenticated user.
          schema:
            type: string
            example: "me"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendMessageRequest'
            examples:
              simple_email:
                summary: Simple text email
                value:
                  raw: "RnJvbTogbWUNCiBUbzogcmVjaXBpZW50QGV4YW1wbGUuY29tCgpTdWJqZWN0OiBIZWxsbyBmcm9tIEdNYWlsIEFQSAoKVGhpcyBpcyBhIHRlc3Qu"
              html_email:
                summary: HTML email with threading
                value:
                  raw: "RnJvbTogbWUNCiBUbzogcmVjaXBpZW50QGV4YW1wbGUuY29tCgpTdWJqZWN0OiBIZWxsbyBmcm9tIEdNYWlsIEFQSAoKVGhpcyBpcyBhIHRlc3Qu"
                  threadId: "1234567890abcdef"
      responses:
        '200':
          description: Message sent successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
              example:
                id: "1234567890abcdef"
                threadId: "1234567890abcdef"
                labelIds: ["SENT"]
        '400':
          description: Bad Request - Invalid request format or parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error:
                  code: 400
                  message: "Invalid message format"
                  status: "INVALID_ARGUMENT"
        '401':
          description: Unauthorized - Invalid or missing authentication
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error:
                  code: 401
                  message: "Request is missing required authentication credential"
                  status: "UNAUTHENTICATED"
        '403':
          description: Forbidden - Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error:
                  code: 403
                  message: "Insufficient Permission: Request had insufficient authentication scopes"
                  status: "PERMISSION_DENIED"
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  securitySchemes:
    oauth2:
      type: oauth2
      description: |
        Gmail API uses OAuth 2.0 for authentication and authorization. You need to obtain 
        an access token with the appropriate scope to send emails.
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://oauth2.googleapis.com/token
          scopes:
            https://www.googleapis.com/auth/gmail.send: Send email on behalf of the user
            https://www.googleapis.com/auth/gmail.compose: Compose and send email messages
            https://mail.google.com/: Full access to Gmail (includes send capability)
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/gmail.send: Send email on behalf of the user
            https://www.googleapis.com/auth/gmail.compose: Compose and send email messages

  schemas:
    SendMessageRequest:
      type: object
      description: Request to send an email message
      required:
        - raw
      properties:
        raw:
          type: string
          format: byte
          description: |
            The entire email message in an RFC 2822 formatted and base64url encoded string.
            This includes headers (To, From, Subject, etc.) and the message body.
          example: "RnJvbTogbWUNCiBUbzogcmVjaXBpZW50QGV4YW1wbGUuY29tCgpTdWJqZWN0OiBIZWxsbyBmcm9tIEdNYWlsIEFQSAoKVGhpcyBpcyBhIHRlc3Qu"
        threadId:
          type: string
          description: |
            ID of the thread the message belongs to. To start a new thread, omit this field.
            If you specify a thread ID, the message will be added to that thread.
          example: "1234567890abcdef"

    Message:
      type: object
      description: A Gmail message
      properties:
        id:
          type: string
          description: The immutable ID of the message
          example: "1234567890abcdef"
        threadId:
          type: string
          description: The ID of the thread the message belongs to
          example: "1234567890abcdef"
        labelIds:
          type: array
          items:
            type: string
          description: List of IDs of labels applied to this message
          example: ["SENT", "IMPORTANT"]
        snippet:
          type: string
          description: A short part of the message text
          example: "This is a test email sent via Gmail API."
        historyId:
          type: string
          description: The ID of the last history record that modified this message
        internalDate:
          type: string
          description: The internal message creation timestamp (epoch ms)
        sizeEstimate:
          type: integer
          description: Estimated size in bytes of the message

    Error:
      type: object
      description: Error response from Gmail API
      properties:
        error:
          type: object
          properties:
            code:
              type: integer
              description: HTTP status code
              example: 400
            message:
              type: string
              description: Error message
              example: "Invalid message format"
            status:
              type: string
              description: Error status
              example: "INVALID_ARGUMENT"
            details:
              type: array
              items:
                type: object
              description: Additional error details

  examples:
    simple_text_email_raw:
      summary: Simple text email (before base64url encoding)
      description: |
        Here's what the raw message looks like before base64url encoding:
        ```
        To: recipient@example.com
        Subject: Hello from Gmail API
        
        This is a test email sent via Gmail API.
        ```

    html_email_raw:
      summary: HTML email (before base64url encoding)
      description: |
        Here's what an HTML email looks like before base64url encoding:
        ```
        To: recipient@example.com
        Subject: Hello from Gmail API
        Content-Type: text/html; charset=UTF-8
        
        <html><body><h1>Hello!</h1><p>This is an HTML email.</p></body></html>
        ```
