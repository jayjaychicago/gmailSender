openapi: 3.0.3
info:
  title: Gmail API - Send Email (with Structured Body)
  version: v1
  description: |
    Send mail via Gmail. Supports either:
    • raw RFC822 (base64url) passed through to Gmail
    • a structured JSON body (from/to/subject/text/html/attachments) that a proxy converts to RFC822

servers:
  - url: https://gmail.googleapis.com
    description: Gmail API production server
  - url: https://gmailsender.myinstantapi.com/prod/v1
    description: Your proxy that assembles RFC822 and forwards to Gmail

security:
  - oauth2:
    - https://www.googleapis.com/auth/gmail.send

paths:
  /gmail/v1/users/{userId}/messages/send:
    post:
      summary: Send an email message
      description: Send an email using either raw RFC822 or a structured JSON body.
      operationId: sendMessage
      tags: [Messages]
      security:
        - oauth2:
          - https://www.googleapis.com/auth/gmail.send
      parameters:
        - name: userId
          in: path
          required: true
          description: The user's email address. Use "me" for the authenticated user.
          schema:
            type: string
            example: me
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/SendMessageRequestRaw'
                - $ref: '#/components/schemas/SendMessageRequestStructured'
            examples:
              raw_minimal:
                summary: Raw RFC822 (base64url)
                value:
                  raw: "RnJvbTogbWUNCiBUbzogcmVjaXBpZW50QGV4YW1wbGUuY29tCgpTdWJqZWN0OiBIZWxsbyBmcm9tIEdNYWlsIEFQSAoKVGhpcyBpcyBhIHRlc3Qu"
              structured_text:
                summary: Structured text email
                value:
                  structured:
                    from: "me"
                    to: ["recipient@example.com"]
                    subject: "Hello from Gmail API"
                    text: "This is a test email."
              structured_html_cc_bcc:
                summary: Structured HTML with CC/BCC and attachment
                value:
                  structured:
                    from: "me"
                    to: ["a@example.com","b@example.com"]
                    cc: ["c@example.com"]
                    bcc: ["d@example.com"]
                    subject: "Weekly Update"
                    html: "<h1>Hi team</h1><p>Updates inside.</p>"
                    headers:
                      Reply-To: "ops@example.com"
                    attachments:
                      - filename: "report.pdf"
                        mimeType: "application/pdf"
                        contentBase64: "JVBERi0xLjQKJ..."
      responses:
        '200':
          description: Message sent successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
              example:
                id: "1234567890abcdef"
                threadId: "1234567890abcdef"
                labelIds: ["SENT"]
        '400':
          description: Bad Request - Invalid request format or parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error:
                  code: 400
                  message: Invalid message format
                  status: INVALID_ARGUMENT
        '401':
          description: Unauthorized - Invalid or missing authentication
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden - Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  securitySchemes:
    oauth2:
      type: oauth2
      description: Gmail API uses OAuth 2.0 for authentication/authorization.
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://oauth2.googleapis.com/token
          scopes:
            https://www.googleapis.com/auth/gmail.send: Send email on behalf of the user
            https://www.googleapis.com/auth/gmail.compose: Compose and send email messages
            https://mail.google.com/: Full access to Gmail (includes send capability)
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/gmail.send: Send email on behalf of the user
            https://www.googleapis.com/auth/gmail.compose: Compose and send email messages

  schemas:
    SendMessageRequestRaw:
      type: object
      description: Native Gmail send using base64url-encoded RFC822 in the `raw` field.
      required: [raw]
      properties:
        raw:
          type: string
          format: byte
          description: RFC 2822 message, base64url-encoded. Include all headers and body.
        threadId:
          type: string
          description: Gmail thread ID to append to (omit to start new thread).

    SendMessageRequestStructured:
      type: object
      description: Structured message that the proxy converts to RFC822 and base64url.
      required: [structured]
      properties:
        structured:
          type: object
          required: [to, subject]
          properties:
            from:
              type: string
              description: Sender email. Use "me" for the authenticated user. Defaults to "me" if omitted.
              example: me
            to:
              type: array
              items:
                type: string
                format: email
              minItems: 1
              description: Primary recipients.
            cc:
              type: array
              items:
                type: string
                format: email
            bcc:
              type: array
              items:
                type: string
                format: email
            replyTo:
              type: string
              format: email
              description: Reply-To address.
            subject:
              type: string
            text:
              type: string
              description: Plaintext body.
            html:
              type: string
              description: HTML body.
            headers:
              type: object
              additionalProperties:
                type: string
              description: Additional headers (e.g., In-Reply-To, References).
            threadId:
              type: string
              description: Gmail thread ID to append to.
            attachments:
              type: array
              items:
                $ref: '#/components/schemas/Attachment'
              description: Optional attachments.

    Attachment:
      type: object
      required: [filename, mimeType, contentBase64]
      properties:
        filename:
          type: string
        mimeType:
          type: string
          example: application/pdf
        contentBase64:
          type: string
          description: File bytes in standard base64 (proxy handles transfer encoding).
        contentId:
          type: string
          description: Content-ID for inline attachments (reference as cid:... in HTML).
        inline:
          type: boolean
          description: If true, mark as inline.

    Message:
      type: object
      description: A Gmail message
      properties:
        id:
          type: string
          description: Immutable message ID.
        threadId:
          type: string
          description: Thread ID the message belongs to.
        labelIds:
          type: array
          items:
            type: string
          description: Labels applied to the message.
        snippet:
          type: string
          description: Short part of the message text.
        historyId:
          type: string
        internalDate:
          type: string
          description: Message creation timestamp (epoch ms).
        sizeEstimate:
          type: integer

    Error:
      type: object
      description: Error response
      properties:
        error:
          type: object
          properties:
            code:
              type: integer
            message:
              type: string
            status:
              type: string
            details:
              type: array
              items:
                type: object
